---
title: オフラインリアルタイムどう書く E14 の問題 - サイコロできるかな
date: 2017-06-03 16:00 JST
tags:
---

ruby:
  json = JSON.parse(File.read(File.join(__dir__, "2017-06-03-doukaku-e14/doukaku.json")), symbolize_names: true)
  json += JSON.parse(File.read(File.join(__dir__, "2017-06-03-doukaku-e14/doukaku2.json")), symbolize_names: true)

markdown:
  [オフラインリアルタイムどう書く](https://yhpg.doorkeeper.jp/events/59397) E14 の問題です。

  追記: 当日発表中に自分で気づいて懺悔しましたが、ある場合のテストケースが足りずに出題者の回答が特定の状況で誤検出していました。
  [@Nabetani さんありがとうございます。](http://qiita.com/mtsmfm/items/89b6634f363bbf5b47f5#comment-ba97a09d85a837b385c6)

  ## 問題の概要

  でたらめにサイコロの目を印刷した紙がある。
  サイコロを作ることができるか答えよ。

= json[7][:image]

markdown:
  ## 入力

  `5262,4631,2644` のような形式。
  数字はサイコロの目。`,` は行の区切り。
  この値の場合上の図のようになる。

  ## 出力

  `true` もしくは `false`。
  サイコロができれば `true`。
  なければ `false`。

  ## 補足

  2、3、6などの向きは気にしない。
  つまり、1の裏が6、2の裏が5、3の裏が4になっていればよいものとする。

  不正な入力について考慮する必要はない。

  ## おまけ

  回転したものや上下左右を反転させたものを除くと、立方体の展開図は以下の 11 通り。

  ![立方体展開図一覧](2017/06/03/list.svg)

  ----------

  実装ができた方は [Qiitaの記事](http://qiita.com/mtsmfm/items/89b6634f363bbf5b47f5) のコメント欄からリンクを張っていただくと見つけやすくて助かります。

h2 サンプルデータ

table
  thead
    tr
      th #
      th 入力
      th 期待
      th 状況へのリンク

  tbody
    - json.each.with_index do |data, i|
      tr
        td= i
        td= data[:input]
        td= data[:expected]
        td= link_to '状況', '', anchor: i

h2 テストデータ

textarea= json.map.with_index {|data, i| %!/*#{i}*/ test("#{data[:input]}", "#{data[:expected]}");! }.join("\n")

h2 状況一覧

- json.each.with_index do |data, i|
  h3{id= i} ##{i} : #{data[:input]} : #{data[:expected]}
  = data[:image]
  hr
