---
title: オフラインリアルタイムどう書く E21 の問題 - ドキドキロシアンルーレット
date: 2018-02-03 16:00 JST
tags:
---

ruby:
  json = JSON.parse(File.read(File.join(__dir__, "2018-02-03-doukaku-e21/doukaku.json")), symbolize_names: true)

markdown:
  [オフラインリアルタイムどう書く E21](https://yhpg.doorkeeper.jp/events/69404) の問題です。

  ロシアンルーレットをして、何人かがアタリを引いた。

  最初にリボルバーに弾がどう込められていたか求めよ。

  ## ルール

  1. 順番に引き金を引き、その際に弾倉が数字分だけ回転する
  2. アタリを引いた人はゲームから脱落する
  3. 残弾が 0 になるまで続ける

  ## 入力

  `31[1]/6` のような形式。
  最初の数字、`3`、`1`、`1` はそれぞれ参加者。
  `/` の後ろの数字、`6` はリボルバーの最大装填数。

  参加者の数字は弾倉を回転させる度合い。この場合、`3` ならば `3/6` 、つまり弾倉を半回転させる。
  `[]` で囲まれている参加者は当たりを引いた人。

  ## 出力

  `000010` のような形式。

  `0` がハズレ、`1` がアタリ。
  左から順番に並んでいる。

  ## 補足

  不正な入力について考慮する必要はない。
  出力候補が複数あることはない。

  ----------

  実装ができた方は [Qiitaの記事](http://qiita.com/mtsmfm/items/b48952dee07784cce8f2) のコメント欄からリンクを張っていただくと見つけやすくて助かります。

h2 サンプルデータ

table
  thead
    tr
      th #
      th 入力
      th 期待

  tbody
    - json.each.with_index do |data, i|
      tr
        td= i
        td= data[:input]
        td= data[:expected]

h2 テストデータ

textarea= json.map.with_index {|data, i| %!/*#{i}*/ test("#{data[:input]}", "#{data[:expected]}");! }.join("\n")
